Instructions

Get the customers who have not placed any orders, sorted by customer_lname and then customer_fname
Data Description

Data is available in local file system /data/retail_db

retail_db information:

    Source directories: /data/retail_db/orders and /data/retail_db/customers
    Source delimiter: comma(",")
    Source Columns - orders - order_id, order_date, order_customer_id, order_status
    Source Columns - customers - customer_id, customer_fname, customer_lname and many more

Output Requirements

    Target Columns: customer_lname, customer_fname
    Number of Files: 1
    Place the output file in the HDFS directory
    /user/`whoami`/problem2/solution/
    Replace `whoami` with your OS user name
    File format should be text
    delimiter is (",")
    Compression: Uncompressed

End of Problem

Solution

val p2ord = spark.read.schema("order_id string, order_date string, order_customer_id string, order_status string").csv("/public/retail_db/orders")
val p2cust = spark.read.csv("/public/retail_db/customers").selectExpr("_c0 as customer_id", "_c1 as customer_fname", "_c2 as customer_lname")
val p2jn = p2cust.join(p2ord,'customer_id === 'order_customer_id,"left_anti").select('customer_lname, 'customer_fname).sort('customer_lname, 'customer_fname)
p2jn.coalesce(1).write.mode("overwrite").csv("/user/username/problem2/solution/")

Results:
scala> spark.read.text("/user/username/problem2/solution/").show
+--------------+
|         value|
+--------------+
|   Bolton,Mary|
|Ellison,Albert|
| Green,Carolyn|
|   Greene,Mary|
|  Harrell,Mary|
|    Lewis,Mary|
|  Mueller,Mary|
| Patel,Matthew|
|     Shaw,Mary|
|  Smith,Amanda|
|  Smith,Ashley|
|    Smith,Carl|
|    Smith,Emma|
|   Smith,Grace|
|   Smith,James|
|    Smith,Joan|
| Smith,Kenneth|
|   Smith,Kevin|
|    Smith,Mary|
|    Smith,Mary|
+--------------+
only showing top 20 rows

